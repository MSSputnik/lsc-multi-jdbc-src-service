<?xml version="1.0" ?>
<lsc xmlns="http://lsc-project.org/XSD/lsc-core-2.1.xsd"
	xmlns:multijdbc="http://lsc-project.org/XSD/lsc-multi-jdbc-src-service-1.0.xsd"
	revision="0">
	<connections>
		<databaseConnection>
			<name>jdbcDest</name>
			<url>jdbc:postgresql://localhost:5432/USERSTORE</url>
			<username>dbuser</username>
			<password>passw0rd</password>
			<driver>org.postgresql.Driver</driver>
		</databaseConnection>
		<databaseConnection>
			<name>jdbcCSV</name>
			<url>jdbc:relique:csv:csvdir</url>
			<username>dummy</username>
			<password>dummy</password>
			<driver>org.relique.jdbc.csv.CsvDriver</driver>
		</databaseConnection>
	</connections>
	<audits />
	<tasks>
		<task>
			<name>MySyncTask</name>
			<bean>org.lsc.beans.SimpleBean</bean>
			<pluginSourceService
				implementationClass="com.becketal.lsc.plugins.connectors.multijdbcsrc.MultiJdbcSrcService">
				<name>MySyncTask-src</name>
				<connection reference="jdbcCSV" />
				<multijdbc:MultiJdbcSrcServiceConfig>
					<multijdbc:requestNameForList>getGIDUniqueSrcListCSV</multijdbc:requestNameForList>
					<multijdbc:requestNameForObject>getSrcGIDCSV</multijdbc:requestNameForObject>
					<multijdbc:requestNameForClean>getSrcGIDCleanCSV</multijdbc:requestNameForClean>
					<multijdbc:multivaluehook><![CDATA[js:
					var result = null
					var today = "20200410"
					var thisEntry;
					var activeEntry = null;
					var lastEntry = null;
					var firstEntry = srcBeanList.get(0);
					var maxDate = "00000000";
					for (var i = 0; i < srcBeanList.size(); i++) {
						thisEntry = srcBeanList.get(i);
						java.lang.System.out.println(thisEntry)
						var entryDate = thisEntry.get("COMPANYENTRYDATE");
						var exitDate = thisEntry.get("COMPANYEXITDATE");
						java.lang.System.out.println("Check Enty " + i);
						java.lang.System.out.println("  " + thisEntry.get("CPBGLOBALID") + " - " + thisEntry.get("CPBSUPPLIERID") + " - " + thisEntry.get("CPBORIGINALNUMBER"));
						java.lang.System.out.println("  SOE: " + thisEntry.get("CPBSTATUS_OF_EMPLOYEE") + " - EntryDat: " + entryDate + " - ExitDat: " + exitDate);
						if (entryDate <= today & today <= exitDate)
							activeEntry = thisEntry;
						if (maxDate < exitDate) {
							maxDate = exitDate;
							lastEntry = thisEntry;
						}
					}
					if (firstEntry) {
						java.lang.System.out.println("First Entry:");
						java.lang.System.out.println("  " + firstEntry.get("CPBGLOBALID") + " - " + firstEntry.get("CPBSUPPLIERID") + " - " + firstEntry.get("CPBORIGINALNUMBER"));
						java.lang.System.out.println("  SOE: " + firstEntry.get("CPBSTATUS_OF_EMPLOYEE") + " - EntryDat: " + firstEntry.get("COMPANYENTRYDATE") + " - ExitDat: " + firstEntry.get("COMPANYEXITDATE"));
					}
					if (activeEntry) {
						java.lang.System.out.println("Active Entry:");
						java.lang.System.out.println("  " + activeEntry.get("CPBGLOBALID") + " - " + activeEntry.get("CPBSUPPLIERID") + " - " + activeEntry.get("CPBORIGINALNUMBER"));
						java.lang.System.out.println("  SOE: " + activeEntry.get("CPBSTATUS_OF_EMPLOYEE") + " - EntryDat: " + activeEntry.get("COMPANYENTRYDATE") + " - ExitDat: " + activeEntry.get("COMPANYEXITDATE"));
					}
					if (lastEntry) {
						java.lang.System.out.println("Last Entry:");
						java.lang.System.out.println("  " + lastEntry.get("CPBGLOBALID") + " - " + lastEntry.get("CPBSUPPLIERID") + " - " + lastEntry.get("CPBORIGINALNUMBER"));
						java.lang.System.out.println("  SOE: " + lastEntry.get("CPBSTATUS_OF_EMPLOYEE") + " - EntryDat: " + lastEntry.get("COMPANYENTRYDATE") + " - ExitDat: " + lastEntry.get("COMPANYEXITDATE"));
					}
					if (activeEntry) {
						java.lang.System.out.println("Active entry selected");
						result = activeEntry;
					} else { 
						if (lastEntry) {
							java.lang.System.out.println("Last entry selected");
							result = lastEntry;
						} else {
							java.lang.System.out.println("First entry selected");
							result = firstEntry;
						}
					}
					result
					]]></multijdbc:multivaluehook>
				</multijdbc:MultiJdbcSrcServiceConfig>
			</pluginSourceService>
			<databaseDestinationService>
				<name>MySyncTask-dst</name>
				<connection reference="jdbcDest" />
				<requestNameForList>getGIDUniqueDstList</requestNameForList>
				<requestNameForObject>getDstGID</requestNameForObject>
				<requestsNameForInsert>
					<string>insertGID</string>
				</requestsNameForInsert>
				<requestsNameForUpdate>
					<string>updateGID</string>
				</requestsNameForUpdate>
				<requestsNameForDelete>
					<string>deleteGID</string>
				</requestsNameForDelete>
			</databaseDestinationService>
			<propertiesBasedSyncOptions>
				<mainIdentifier>''</mainIdentifier>
				<defaultDelimiter>|</defaultDelimiter>
				<defaultPolicy>FORCE</defaultPolicy>
			</propertiesBasedSyncOptions>
		</task>
	</tasks>
</lsc>
